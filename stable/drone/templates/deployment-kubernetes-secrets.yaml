{{- if .Values.kubernetes_secrets.enabled -}}
{{- $fullName := include "drone.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "drone.fullname" . }}-kubernetes-secrets
  labels:
    app: {{ template "drone.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: kubernetes-secrets
spec:
  selector:
    matchLabels:
      app: {{ template "drone.name" . }}
      release: "{{ .Release.Name }}"
      component: kubernetes-secrets
  replicas: {{ .Values.kubernetes_secrets.replicas }}
  template:
    metadata:
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- if .Values.kubernetes_secrets.annotations }}
{{ toYaml .Values.kubernetes_secrets.annotations | indent 8 }}
{{- end }}
      labels:
        app: {{ template "drone.name" . }}
        release: "{{ .Release.Name }}"
        component: kubernetes-secrets
    spec:
{{- if .Values.kubernetes_secrets.schedulerName }}
      schedulerName: "{{ .Values.kubernetes_secrets.schedulerName }}"
{{- end }}
{{- if .Values.kubernetes_secrets.affinity }}
      affinity:
{{ toYaml .Values.kubernetes_secrets.affinity | indent 8 }}
{{- end }}
{{- if .Values.kubernetes_secrets.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.kubernetes_secrets.nodeSelector | indent 8 }}
{{- end }}
{{- with .Values.kubernetes_secrets.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
{{- end }}
      serviceAccountName: {{ $fullName }}-secrets
      containers:
      - name: kubernetes-secrets
        image: "{{ .Values.images.kubernetes_secrets.repository }}:{{ .Values.images.kubernetes_secrets.tag }}"
        imagePullPolicy: {{ .Values.images.kubernetes_secrets.pullPolicy }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
          - name: KUBERNETES_NAMESPACE
            value: {{ .Release.Namespace }}
          {{- range $secret, $keys := .Values.kubernetes_secrets.envSecrets }}
          {{- range $keys }}
          - name: {{ . }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ . | quote }}
          {{- end }}
          {{- end }}
          {{- range $key, $value := .Values.kubernetes_secrets.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ template "drone.name" . }}
    component: kubernetes-secrets
    release: "{{ .Release.Name }}"
  name: {{ $fullName }}-secrets
spec:
  ports:
  - name: secretapi
    port: 3000
    protocol: TCP
  selector:
    app: {{ template "drone.name" . }}
    component: kubernetes-secrets
    release: "{{ .Release.Name }}"
  type: ClusterIP
---
{{- if $.Values.kubernetes_secrets.ingress.enabled }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
  {{- range $key, $value := .Values.kubernetes_secrets.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  labels:
    app: {{ template "drone.name" . }}
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  name: drone-secret-agent
spec:
  rules:
  {{- range .Values.kubernetes_secrets.ingress.hosts }}
  - host: {{ . }}
    http:
      paths:
      {{- if $.Values.ingress.path }}
        - path: {{ $.Values.kubernetes_secrets.ingress.path }}
      {{- else if index $.Values.kubernetes_secrets.ingress "annotations" }}
        {{- if eq (index $.Values.kubernetes_secrets.ingress.annotations "kubernetes.io/ingress.class" | default "") "gce" "alb" "istio" }}
        - path: /*
        {{- else }}{{/* Has annotations but ingress class is not "gce" nor "alb" nor "istio" */}}
        - path: /
        {{- end }}
      {{- else }}{{/* Has no annotations */}}
        - path: /
      {{- end }}
          backend:
            serviceName: {{ $fullName }}-secrets
            servicePort: 3000

  {{ end }}
  {{- if .Values.kubernetes_secrets.ingress.tls }}
  tls:
{{ toYaml .Values.kubernetes_secrets.ingress.tls | indent 4 }}
  {{ end }}
---
{{ end }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $fullName }}-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $fullName }}-secrets
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $fullName }}-secrets
subjects:
- kind: ServiceAccount
  name: {{ $fullName }}-secrets
roleRef:
  kind: Role
  name: {{ $fullName }}-secrets
  apiGroup: rbac.authorization.k8s.io
{{- end -}}
